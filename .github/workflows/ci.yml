name: Continuous Integration
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [optimize, debug]
        build_target: [x86, x64]
        toolchain: [default]
        # The macos builder has min. XCode 10.3, so no x86 builds.
        exclude:
          - os: macos-latest
            build_target: x86
        # Test if ARM compiles on windows.
        include:
          - os: windows-latest
            build_type: optimize
            build_target: arm
          - os: windows-latest
            build_type: debug
            build_target: arm
          - os: windows-latest
            build_type: optimize
            build_target: arm64
          - os: windows-latest
            build_type: debug
            build_target: arm64
          # Test if compiling to javascript works.
          - os: ubuntu-latest
            build_type: optimize
            build_target: x86
            toolchain: emscripten
          - os: ubuntu-latest
            build_type: debug
            build_target: x86
            toolchain: emscripten

      fail-fast: false
    env:
      TARGETS_ARG: --targets=${{ matrix.build_target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      # Setup Python for AMBuild
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install AMBuild
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install git+https://github.com/alliedmodders/ambuild

      # Optionally download emscripten SDK
      - name: Setup emsdk
        if: matrix.toolchain == 'emscripten'
        uses: mymindstorm/setup-emsdk@v9
        with:
          # Make sure to set a version number!
          version: latest
          # This is the name of the cache folder.
          # The cache folder will be placed in the build directory,
          #  so make sure it doesn't conflict with anything!
          actions-cache-folder: 'emsdk-cache'

      - name: Select clang compiler
        if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          clang --version
          clang++ --version
      
      - name: Select emcc compiler
        if: matrix.toolchain == 'emscripten'
        run: |
          echo "CC=emcc" >> $GITHUB_ENV
          echo "CXX=em++" >> $GITHUB_ENV
          # The SDK no longer sets this envvar, but ambuild expects it.
          echo "EMSCRIPTEN=$EMSDK/fastcomp/emscripten" >> $GITHUB_ENV
          # Don't pass the --targets option to configure.py.
          echo "TARGETS_ARG=" >> $GITHUB_ENV

      - name: Install Linux dependencies
        if: startsWith(runner.os, 'Linux') && matrix.build_target == 'x86'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            gcc-multilib g++-multilib libstdc++6 lib32stdc++6 \
            libc6-dev libc6-dev-i386 linux-libc-dev \
            linux-libc-dev:i386

      - name: Build
        run: |
          mkdir objdir
          cd objdir
          python ../configure.py --enable-${{ matrix.build_type }} ${{ env.TARGETS_ARG }}
          ambuild

      # Cannot run tests for ARM since the builder is amd64.
      - name: Test
        if: ${{ !startsWith(matrix.build_target, 'arm') }}
        run: |
          python tests/runtests.py objdir
